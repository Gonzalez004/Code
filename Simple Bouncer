#include <allegro5/allegro.h>
#include <iostream>

using namespace std;



int main()
{
	ALLEGRO_DISPLAY *Display = NULL;
	ALLEGRO_EVENT_QUEUE *event_queue = NULL;
	ALLEGRO_TIMER *Timer = NULL;
	ALLEGRO_BITMAP *Bouncer = NULL;

	float Bouncer_X = 50;
	float Bouncer_Y = 50;

	float Bouncer_dx = -4.0;
	float Bouncer_dy = 4.0;

	bool redraw = true;

	bool Key[4] = { false, false, false, false };

	bool doexit = false;

	al_init();

	//get the keyboard ready to use
	al_install_keyboard();

	Timer = al_create_timer(.01);

	Display = al_create_display(640, 480);

	Bouncer = al_create_bitmap(15, 15);
	al_set_target_bitmap(Bouncer);
	al_clear_to_color(al_map_rgb(50, 510, 50));

	al_set_target_bitmap(al_get_backbuffer(Display));

	event_queue = al_create_event_queue();

	al_register_event_source(event_queue, al_get_display_event_source(Display));
	al_register_event_source(event_queue, al_get_timer_event_source(Timer));
	al_register_event_source(event_queue, al_get_keyboard_event_source());

	al_clear_to_color(al_map_rgb(0, 0, 0));

	al_flip_display();

	al_start_timer(Timer);

	while (!doexit)
	{

		ALLEGRO_EVENT ev;
		al_wait_for_event(event_queue, &ev);

		if (ev.type == ALLEGRO_EVENT_TIMER) {
			if (Bouncer_X < 0 || Bouncer_X > 640 - 15) {
				Bouncer_dx = -Bouncer_dx;
			}
			if (Bouncer_Y < 0 || Bouncer_Y > 480 - 15) {
				Bouncer_dy = -Bouncer_dy;
			}
			Bouncer_X += Bouncer_dx;
			Bouncer_Y += Bouncer_dy;

			redraw = true;
		}

		else if (ev.type == ALLEGRO_EVENT_KEY_UP) {
			switch (ev.keyboard.keycode) {
			case ALLEGRO_KEY_ESCAPE:
				doexit = true;
				break;
			}
		}
		if (redraw && al_is_event_queue_empty(event_queue)) {
			redraw = false;

			al_clear_to_color(al_map_rgb(0, 0, 0));

			al_draw_bitmap(Bouncer, Bouncer_X, Bouncer_Y, 0);

			al_flip_display();
		}
	}

	al_destroy_bitmap(Bouncer);
	al_destroy_timer(Timer);
	al_destroy_display(Display);
	al_destroy_event_queue(event_queue);

	return 0;
}
